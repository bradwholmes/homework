buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.0.0'
        classpath 'com.github.jcandksolutions.gradle:android-unit-test:2.1.1'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion 21
    buildToolsVersion '23.0.1'

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 21
        versionCode 1
        versionName '1.0.0'
        applicationId 'com.phunware'
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    packagingOptions {
        exclude 'LICENSE.txt'
    }
}

apply plugin: 'android-unit-test'

dependencies {
    repositories {
        mavenCentral()
    }

    apt 'org.projectlombok:lombok:1.16.2'
    apt 'com.squareup.dagger:dagger-compiler:1.2.2'

    compile 'com.squareup.dagger:dagger:1.2.2'
    compile 'com.android.support:appcompat-v7:21.0.3'
    compile 'com.android.support:recyclerview-v7:21.0.3'
    compile 'com.android.support:cardview-v7:21.0.3'
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.squareup.retrofit:retrofit:1.9.0'
    compile 'io.reactivex:rxandroid:0.23.0'
    compile 'com.google.guava:guava:18.0'
    compile 'com.squareup.picasso:picasso:2.5.0'

    androidTestApt 'org.projectlombok:lombok:1.16.2'
    androidTestApt 'com.squareup.dagger:dagger-compiler:1.2.2'
    androidTestCompile 'com.squareup.okhttp:mockwebserver:2.2.0'
    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.0'
    androidTestCompile 'com.android.support.test:testing-support-lib:0.1'

    testCompile 'junit:junit:4.12'
    testCompile 'org.hamcrest:hamcrest-core:1.1'
    testCompile 'org.hamcrest:hamcrest-library:1.1'
    testCompile 'org.hamcrest:hamcrest-integration:1.1'
    testCompile 'com.squareup:fest-android:1.0.8'
    testCompile 'com.android.support:appcompat-v7:21.0.3'

    testCompile('org.robolectric:robolectric:2.4') {
        exclude module: 'classworlds'
        exclude module: 'commons-logging'
        exclude module: 'httpclient'
        exclude module: 'maven-artifact'
        exclude module: 'maven-artifact-manager'
        exclude module: 'maven-error-diagnostics'
        exclude module: 'maven-model'
        exclude module: 'maven-project'
        exclude module: 'maven-settings'
        exclude module: 'plexus-container-default'
        exclude module: 'plexus-interpolation'
        exclude module: 'plexus-utils'
        exclude module: 'wagon-file'
        exclude module: 'wagon-http-lightweight'
        exclude module: 'wagon-provider-api'
    }
}

task(generateLombokPublicApiJar) {
    def libsDirectory = project.file(new File(project.projectDir, "/libs/"))

    doFirst {
        if (!libsDirectory.exists()) {
            libsDirectory.mkdirs()
        } else {
            new File(libsDirectory, 'lombok-api.jar').delete()
        }
    }

    doLast {
        def lombokDependency = project.configurations.apt
                .find { dependency -> dependency.name.contains("lombok") }

        project.javaexec {
            main = '-jar'
            args = [lombokDependency, 'publicApi', project.file(new File(project.projectDir, "/libs/"))]
        }
    }
}

task(copyTestRobolectricConfig, type: Copy) {
    from 'src/test/resources'
    into 'build/test-classes/debug'
}

tasks.preBuild.dependsOn copyTestRobolectricConfig
tasks.whenTaskAdded { task ->
    if(task.name == 'testClasses')
        tasks.assemble.dependsOn task
}
